# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-04-08 01:10
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import taggit.managers
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0019_delete_filter'),
        ('wagtailcore', '0039_collectionviewrestriction'),
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Display',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hd',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Os',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Text to describe the index of the products')),
                ('image', models.ForeignKey(blank=True, help_text='Pretty Banner Image :)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProductPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('article_num', models.CharField(max_length=20)),
                ('short_desc', models.CharField(blank=True, max_length=250)),
                ('busigroup_choice', models.CharField(choices=[('Consumer', 'Consumer'), ('Commercial', 'Commercial')], default='Consumer', max_length=200)),
                ('status_choice', models.CharField(choices=[('Live', 'Live'), ('Coming Soon', 'Coming Soon'), ('End of Life', 'End of Life')], default='Live', max_length=200)),
                ('device_choice', models.CharField(choices=[('Laptops', 'Laptops'), ('Desktops', 'Desktops'), ('Desktops - AIO', 'Desktops All-In-Ones'), ('Accessories', 'Accessories'), ('WorkStations', 'Workstations'), ('Tablets', 'Tablets'), ('Smart Devices', 'Smart Devices'), ('Servers Storage and Networking', 'Servers, Storage and Networking')], default='Laptops', max_length=200)),
                ('hybrislink', models.TextField()),
                ('halo', models.BooleanField(default=False)),
                ('touch', models.BooleanField(default=False)),
                ('conv', models.BooleanField(default=False)),
                ('launch_notes', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('live_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('brandtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Brand')),
                ('feature_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('producttag', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('thumbnail_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='product.ProductPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_producttag_items', to='taggit.Tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Sku',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=20)),
                ('friendly_name', models.CharField(max_length=200)),
                ('country_choice', models.CharField(choices=[('United States', 'US'), ('Canada', 'CA')], default='United States', max_length=15)),
                ('status_choices', models.CharField(choices=[('Live', 'Live'), ('Not Live', 'Not Live/Removed From Site'), ('Blocked', 'Blocked'), ('Temporarily Unavailable', 'Temporarily Unavailable')], default='Live', max_length=200)),
                ('type_choices', models.CharField(choices=[('Made to Manufacture', 'Made to Manufacture'), ('Configurable to Order', 'Configurable to Order')], default='Made to Manufacture', max_length=200)),
                ('sku_link', models.TextField(default='NULL')),
                ('price_choice', models.CharField(choices=[('1', 'Above $3,000'), ('2', 'Between $1,000 - $2999.99'), ('3', 'Between $500 - $999.99'), ('4', 'Between $100 - $499.99')], default='3', max_length=15)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('live_date', models.DateTimeField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.ProductPage')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('color_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Color')),
                ('display_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Display')),
                ('hd_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Hd')),
                ('memory_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Memory')),
                ('os_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Os')),
                ('processor_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Processor')),
            ],
        ),
        migrations.CreateModel(
            name='Ss',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='sku',
            name='ss_choice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Ss'),
        ),
    ]
